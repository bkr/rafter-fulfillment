require 'rafter-fulfillment'
require 'faker'

# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'
end

def mock_client_ref_id(prepend)
  "#{prepend}_#{SecureRandom.uuid}"
end

def mock_order_client_ref_id
  mock_client_ref_id("FAKE_ORDER")
end

def mock_ship_client_ref_id
  mock_client_ref_id("FAKE_SHIP")
end

def mock_order_data(client_ref_id)
  {
    "ship_date" => "#{future_date}",
    "fulfillment_shipping_address" => {
        "name" => Faker::Company.name,
        "street_address_1" => Faker::Address.street_address,
        "street_address_2" => Faker::Address.secondary_address,
        "city" => Faker::Address.city,
        "state" => Faker::Address.state_abbr,
        "postal_code" => Faker::Address.zip_code,
        "country" => "USA"
      },
    "client_reference_id" => "#{client_ref_id}",
    "fulfillment_provider" => "Ingram",
    "fulfillment_order_items" => []
  }
end

def mock_shipment_data(order_item_public_ids_array)
  {
    "tracking_number" => "1Z1234567",
    "carrier" => "UPS",
    "carrier_code" =>"Second Day",
    "shipment_reference_id" =>"#{mock_ship_client_ref_id}",
    "fulfillment_order_items" => mock_shipment_item_data(order_item_public_ids_array)
  }
end

def mock_shipment_item_data(order_item_public_ids_array)
  order_item_public_ids_array.collect { |public_id| {"public_id" => public_id } }
end

def future_date
  now = Time.now
  Date.new(now.year + 1, now.month, now.day)
end

def mock_order_item_data(n=2)
  data = []
  n.times { data << { "fulfillable_type" => "BookInstance", "fulfillable_id" => rand(1..100000) } }
  data
end
